version: "3.4"

services:
  # App
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: clean-architecture
    env_file:
      - .env.local
    ports:
      - "8000:8000"
    volumes:
      - ./app:/app/
    command: "--reload"
    depends_on:
      mysql:
        condition: service_healthy
#      postgresql:
#        condition: service_healthy

  # MySQL
  mysql:
    image: mysql:8.0
    platform: linux/x86_64
    container_name: clean-architecture-mysql
    environment:
      - MYSQL_ROOT_PASSWORD=root
      - MYSQL_USER=user
      - MYSQL_PASSWORD=pass
      - MYSQL_DATABASE=clean-architecture
      - TZ=Asia/Tokyo
    ports:
      - "3306:3306"
    volumes:
      - ./infrastructure/mysql/conf.d:/etc/mysql/conf.d
      - clean-architecture-mysql-volume:/var/lib/mysql
    tty: true
    healthcheck:
      # MySQL が起動しているか確認するための設定
      test: mysqladmin ping -h 127.0.0.1 -u$$DATABASE_USERNAME -p$$DATABASE_PASSWORD
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

  # Postgresql
  postgresql:
    image: postgres:14
    platform: linux/x86_64
    container_name: clean-architecture-postgresql
    environment:
      - POSTGRES_USER=user
      - POSTGRES_PASSWORD=pass
      - POSTGRES_DB=clean-architecture
      - TZ=Asia/Tokyo
    ports:
      - "5432:5432"
    volumes:
      - clean-architecture-postgresql-volume:/var/lib/postgresql
    tty: true
    healthcheck:
      # Postgresql が起動しているか確認するための設定
      test: ["CMD-SHELL", "pg_isready"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

  # Mail Server
  mailhog:
    image: mailhog/mailhog
    container_name: clean-architecture-mailhog
    ports:
      - "8025:8025"

volumes:
  # MySQL
  clean-architecture-mysql-volume:
    driver: 'local'
  # Postgresql
  clean-architecture-postgresql-volume:
    driver: 'local'